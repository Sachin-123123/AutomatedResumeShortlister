# Generated by Django 5.0.2 on 2025-04-24 18:17

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
        ('resumes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MatchScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField(help_text='TF-IDF cosine similarity score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('skills_match_score', models.FloatField(help_text='Percentage of required skills matched', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('experience_score', models.FloatField(help_text='Score based on years of experience match', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('education_score', models.FloatField(blank=True, help_text='Score based on education level match', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('overall_score', models.FloatField(help_text='Weighted average of all scores', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('matched_skills', models.JSONField(default=list)),
                ('missing_skills', models.JSONField(default=list)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_scores', to='jobs.job')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_scores', to='resumes.resume')),
            ],
            options={
                'verbose_name': 'Match Score',
                'verbose_name_plural': 'Match Scores',
                'ordering': ['-overall_score'],
            },
        ),
        migrations.AddConstraint(
            model_name='matchscore',
            constraint=models.UniqueConstraint(fields=('resume', 'job'), name='unique_resume_job_match'),
        ),
    ]
